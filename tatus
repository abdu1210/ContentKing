warning: in the working copy of 'src/lib/contentstack.ts', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/src/lib/contentstack.ts b/src/lib/contentstack.ts[m
[1mindex a586d05..639c939 100644[m
[1m--- a/src/lib/contentstack.ts[m
[1m+++ b/src/lib/contentstack.ts[m
[36m@@ -27,16 +27,16 @@[m [mif (!stackConfig.apiKey || !stackConfig.deliveryToken || !stackConfig.environmen[m
   }[m
 }[m
 [m
[31m-// Create Contentstack client with Preview Service configuration[m
[32m+[m[32m// Create Contentstack client[m
 export const contentstackClient = contentstack.stack({[m
   apiKey: stackConfig.apiKey,[m
   deliveryToken: stackConfig.deliveryToken,[m
   environment: stackConfig.environment,[m
   region: stackConfig.region,[m
   live_preview: {[m
[32m+[m[32m    preview_token: stackConfig.previewToken,[m
     enable: true,[m
[31m-    host: "rest-preview.contentstack.com",[m
[31m-    preview_token: stackConfig.previewToken[m
[32m+[m[32m    host: 'rest-preview.contentstack.com'[m
   }[m
 });[m
 [m
[36m@@ -55,47 +55,6 @@[m [mexport const CONTENT_TYPES = {[m
   FOOTER: 'footer',[m
 } as const;[m
 [m
[31m-// Preview Service constants[m
[31m-const CONTENTSTACK_CDN_URL = "cdn.contentstack.io";[m
[31m-const PREVIEW_HOST_NAME = "rest-preview.contentstack.com";[m
[31m-[m
[31m-// Function to get headers for API requests[m
[31m-function getHeaders() {[m
[31m-  const headers = new Headers();[m
[31m-  headers.append("Content-Type", "application/json");[m
[31m-  headers.append("access_token", stackConfig.deliveryToken);[m
[31m-  headers.append("api_key", stackConfig.apiKey);[m
[31m-  return headers;[m
[31m-}[m
[31m-[m
[31m-// Preview Service compatible fetch function[m
[31m-export const fetchPreviewData = async (ctUID: string, entryUID: string, hash: string | null = null) => {[m
[31m-  const contentstackURL = new URL([m
[31m-    `https://${CONTENTSTACK_CDN_URL}/v3/content_types/${ctUID}/entries/${entryUID}?environment=${stackConfig.environment}`[m
[31m-  );[m
[31m-  [m
[31m-  const headers = getHeaders();[m
[31m-  [m
[31m-  if (hash && stackConfig.previewToken) {[m
[31m-    // Use Preview Service[m
[31m-    headers.append("live_preview", hash);[m
[31m-    headers.append("preview_token", stackConfig.previewToken);[m
[31m-    contentstackURL.hostname = PREVIEW_HOST_NAME;[m
[31m-    console.log('ðŸ”„ Using Preview Service with hash:', hash);[m
[31m-  } else {[m
[31m-    // Use regular CDN[m
[31m-    contentstackURL.hostname = CONTENTSTACK_CDN_URL;[m
[31m-    console.log('ðŸ“¡ Using regular CDN');[m
[31m-  }[m
[31m-  [m
[31m-  const res = await fetch(contentstackURL.toString(), {[m
[31m-    method: "GET",[m
[31m-    headers: headers,[m
[31m-  });[m
[31m-  [m
[31m-  return res.json();[m
[31m-};[m
[31m-[m
 // Debug function to test basic connectivity[m
 export const testContentstackConnection = async () => {[m
   try {[m
